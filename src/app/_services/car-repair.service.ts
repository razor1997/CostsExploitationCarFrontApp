import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { of } from 'rxjs';
import { map } from 'rxjs/operators';
import { environment } from 'src/environments/environment';
import { CarRepair } from '../_models/car-repair';
import { Member } from '../_models/member';
import { MembersService } from './members.service';

@Injectable({
  providedIn: 'root'
})
export class CarRepairService {
  baseUrl = environment.apiUrl;
  carRepairs: CarRepair[] = [];
  userCarRepairs: CarRepair[] = [];
  member: Member;
  constructor(private http: HttpClient, private memberService: MembersService) { 

  }

  getAllRepairs(){
    if(this.carRepairs.length > 0) return of(this.carRepairs)
    return this.http.get<CarRepair[]>(this.baseUrl + 'usercarsrepair').pipe(
      map(carRepairs => {
        this.carRepairs = carRepairs;
        return carRepairs;
      })
    )
  }
  getAllUserCarRepairs(username: String){

    this.memberService.getMember(username).subscribe(member => {
      this.member = member;
    }) 
    return this.http.get<CarRepair[]>(this.baseUrl + 'usercarsrepair/carId?IdCar=' + this.member.id)
  }
  getAllRepairByMark(mark: String){
    return this.http.get<CarRepair[]>(this.baseUrl + 'usercarsrepair/Mark?mark=' + mark)
  }
  addCarRepair(carRepair: CarRepair){
    return this.http.post(this.baseUrl + 'usercarsrepair', carRepair).subscribe(data => { })
  }
  deleteCarRepair(id: Number){
    this.http.delete(this.baseUrl + 'usercarsrepair/Id?id=' + id).subscribe(data => {});
  }

}
