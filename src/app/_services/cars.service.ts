import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { of } from 'rxjs';
import { map } from 'rxjs/operators';
import { environment } from 'src/environments/environment';
import { Car } from '../_models/car';
import { Member } from '../_models/member';

@Injectable({
  providedIn: 'root'
})
export class CarsService {
  baseUrl = environment.apiUrl;
  cars: Car[] = [];
  carsUser: Car[] = [];
  member: Member;
  constructor(private http: HttpClient) { }

  getCars()
  {
    if(this.cars.length > 0) return of(this.cars)
    return this.http.get<Car[]>(this.baseUrl + 'usercars').pipe(
      map(cars => {
        this.cars = cars;
        return cars;        
      })
    )
  }
  getUserCars(username: String)
  {
    userId: Number;
    const member = this.member.find(x => x.username === username);
    if(member != undefined) 
    {
      const userId = member.id;
      return this.http.get<Car[]>(this.baseUrl + 'usercars/' + userId).pipe(
        map(carsUser => {
          this.carsUser = carsUser;
          return this.carsUser;
        })
      )
    }
  }
  addUserCar(car: Car)
  {
    return this.http.put(this.baseUrl + 'usercars', car).pipe(
      map(() => {
        const index = this.cars.indexOf(car);
        this.cars[index] = car;
      })
    )
  }  
}

