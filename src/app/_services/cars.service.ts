import { HttpClient, HttpHeaders } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { of } from 'rxjs';
import { catchError, map } from 'rxjs/operators';
import { environment } from 'src/environments/environment';
import { Car } from '../_models/car';
import { Member } from '../_models/member';

@Injectable({
  providedIn: 'root'
})
export class CarsService {
  baseUrl = environment.apiUrl;
  cars: Car[] = [];
  carsUser: Car[] = [];
  member: Member;
  carDTO: Car = { id: 0,appUserId: 1, mark: "Toyota", model: "Supra", buyCost: 100000, yearProduction: 2001, idRepair: 1};
  httpOptions = {
    headers: new HttpHeaders({
      'Content-Type': 'application/json'
    })
  };
  constructor(private http: HttpClient) { 
  }

  getCars()
  {
    if(this.cars.length > 0) return of(this.cars)
    return this.http.get<Car[]>(this.baseUrl + 'usercars').pipe(
      map(cars => {
        this.cars = cars;
        console.log("cycki");
        return cars;        
      })
    )
  }
  getUserCars(username: String)
  {
    userId: Number;
    const member = this.member.find(x => x.username === username);
    if(member != undefined) 
    {
      const userId = member.id;
      return this.http.get<Car[]>(this.baseUrl + 'usercars/' + userId).pipe(
        map(carsUser => {
          this.carsUser = carsUser;
          return this.carsUser;
        })
      )
    }
  }
  addUserCar(car: Car)
  {  
    return this.http.post(this.baseUrl + 'usercars', this.carDTO).subscribe(data => {
      console.log(data);
    })
  }
  deleteUserCar(id: Number)
  {
    console.log(this.baseUrl + "usercars/" + id);
    this.http.delete(this.baseUrl + "usercars/Id?id=" + id).subscribe( data => {
      console.log(data);
    })
  }
}
